// 4. Типизация компонентов и пропсов (любой тип)
// Создаем переиспользумый компонент List, который будет отображать передаваемые в него списки
import React, {FC, ReactNode} from 'react';


interface ListProps<T> {                    // генерик <T> обозначает любой тип
    items: T[];                             // Этот тип определили как массив из любых типов данных + `[]` - обозначает массив
    renderItem: (item: T) => ReactNode      // Это поле нужно для того, чтобы отрисовать то, что вернет переданная функций (функция возвращает ноду)
}

const List: <T>(props: ListProps<T>) => React.ReactElement = props => {     // В стрелочной функции для типизации юзается 2 стрелки
    return (
        <div>
            {props.items.map(props.renderItem)}                     {/* На каждый item отрисуется то, что возвращает переданная функция */}
        </div>
    )
};

export default List;